% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_centerline_interpolation.R
\name{calc_centerline_interpolation}
\alias{calc_centerline_interpolation}
\title{Interpolate elevations from points along a centerline}
\usage{
calc_centerline_interpolation(
  points_on_line,
  dem,
  algorithm = "invdist:power=1",
  quiet = TRUE
)
}
\arguments{
\item{points_on_line}{The output from \code{\link[=points_along_line]{points_along_line()}}: an sfc object
of points along the centerline, which will be used as data points for
interpolation.}

\item{dem}{Either a SpatRaster (created via \code{\link[terra:rast]{terra::rast()}}) or an object
that \code{\link[terra:rast]{terra::rast()}} can read to create a SpatRaster.}

\item{algorithm}{A string to control the interpolation algorithm.
See the gdal_grid documentation at \url{https://gdal.org/programs/gdal_grid.html}
for the available algorithms and customization options.}

\item{quiet}{Boolean: should execution proceed "quietly", without messages
(\code{TRUE}) or should progress updates be posted during centerline download and
interpolation (\code{FALSE})?}
}
\value{
A SpatRaster object (as created by \code{\link[terra:rast]{terra::rast()}}), representing the
outputs of the interpolation process.
}
\description{
Interpolate elevations from points along a centerline
}
\examples{
\dontshow{if (rlang::is_interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
dem <- system.file("elevation.tiff", package = "rrrem")
centerline <- get_river_centerline(dem)
center_points <- points_along_line(centerline, n_points = n_points)
interpolated_raster <- calc_centerline_interpolation(
  center_points,
  dem,
  quiet = quiet
)
\dontshow{\}) # examplesIf}
}
